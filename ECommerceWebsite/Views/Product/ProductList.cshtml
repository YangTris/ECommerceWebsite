@model AllProductsViewModel

@{
	ViewData["Title"] = "AllProducts";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


<!--MAIN BODY-->
<div id="product-page-body">
	<!--TOP SECTION-->
	<div id="product-top-container">
		<div id="product-top-wrapper">
			<div id="product-top-text-section">
				<h1>Latest Trending</h1>
				<h2>Wirless Headphone</h2>
				<p>
					Lorem Ipsum is simply dummy text
				</p>
				<a href="../Account/Login">
					<button class="blue-button">
						Shop Now
					</button>
				</a>
			</div>
			<div id="product-top-image-section">
				<img src="~/Assets/top_image.png" />
			</div>
		</div>
	</div><!--END TOP SECTION-->
	<!--PRODUCT CATEGORIES-->
	<div id="product-category-container">
		<div id="product-category-text">
			<span class="blue-line"></span>
			<span class="section-category-text">Categories</span>
		</div>
		<div id="product-category-wrapper">
			<div class="product-category">
				<div class="product-category-image-section">
					<img src="~/Assets/product category/all.png" alt="All Categories" />
				</div>
				<div class="product-category-desc-section">
					<span class="product-category-type">
						All
					</span>
					<span class="product-category-number">
						@Html.DisplayFor(model => model.countProduct) Items
					</span>
				</div>
			</div>
			<div class="product-category">
				<div class="product-category-image-section">
					<img src="~/Assets/product category/watch.png" alt="SmartWatch Categories" />
				</div>
				<div class="product-category-desc-section">
					<span class="product-category-type">
						SmartWatch
					</span>
					<span class="product-category-number">
						60 items
					</span>
				</div>
			</div>
			<div class="product-category">
				<div class="product-category-image-section">
					<img src="~/Assets/product category/laptop.png" alt="Laptop Categories" />
				</div>
				<div class="product-category-desc-section">
					<span class="product-category-type">
						Laptop
					</span>
					<span class="product-category-number">
						60 items
					</span>
				</div>
			</div>
			<div class="product-category">
				<div class="product-category-image-section">
					<img src="~/Assets/product category/phone.png" alt="Phone Categories" />
				</div>
				<div class="product-category-desc-section">
					<span class="product-category-type">
						Phone
					</span>
					<span class="product-category-number">
						60 items
					</span>
				</div>
			</div>
			<div class="product-category">
				<div class="product-category-image-section">
					<img src="~/Assets/product category/ipad.png" alt="Tablet Categories" />
				</div>
				<div class="product-category-desc-section">
					<span class="product-category-type">
						Tablet
					</span>
					<span class="product-category-number">
						60 items
					</span>
				</div>
			</div>
			<div class="product-category">
				<div class="product-category-image-section">
					<img src="~/Assets/product category/headphone.png" alt="Tablet Categories" />
				</div>
				<div class="product-category-desc-section">
					<span class="product-category-type">
						Headphone
					</span>
					<span class="product-category-number">
						60 items
					</span>
				</div>
			</div>
		</div>
	</div><!--END PRODUCT CATEGORIES-->

	<!--PRODUCT CARDS-->
	<div class="product-section" id="product-section-all">
		<div class="product-section-top-container">
			<div class="section-category-container">
				<div class="section-category-type">
					<span class="blue-line"></span>
					<span class="section-category-text">All Electronics</span>
				</div>
				<h1>Explore Your Favorite</h1>
			</div>
		</div>

		<div class="product-cards-container">
			<ul>
				@foreach (var item in Model.products)
				{
					<li class="product-card">
						<a asp-action="ProductDetails" asp-route-productId="@item.productId" class="product-link">
							<div class="product-image-container">
								<img src="~/Assets/watch.png" />
								@* <button class="heart-button">
							<svg viewBox="0 0 24 24" width="22px" height="22px" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill-rule="evenodd" clip-rule="evenodd" d="M12 6.00019C10.2006 3.90317 7.19377 3.2551 4.93923 5.17534C2.68468 7.09558 2.36727 10.3061 4.13778 12.5772C5.60984 14.4654 10.0648 18.4479 11.5249 19.7369C11.6882 19.8811 11.7699 19.9532 11.8652 19.9815C11.9483 20.0062 12.0393 20.0062 12.1225 19.9815C12.2178 19.9532 12.2994 19.8811 12.4628 19.7369C13.9229 18.4479 18.3778 14.4654 19.8499 12.5772C21.6204 10.3061 21.3417 7.07538 19.0484 5.17534C16.7551 3.2753 13.7994 3.90317 12 6.00019Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
							</button> *@
							</div>
							<div class="product-text-container">
								<h1>@Html.DisplayFor(modelItem => item.name)</h1>
								<div class="product-purchase">
									<span class="product-price">@Html.DisplayFor(modelItem => item.price)$</span>
									<button class="blue-button">
										Add to cart
									</button>
								</div>
							</div>
						</a>
					</li>
				}
			</ul>
		</div>
		<!-- Pagination buttons -->
		<div class="pagination-container">
			<button id="prev" disabled>Previous</button>
			<span id="page-info">Page 1</span>
			<button id="next">Next</button>
		</div>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const productsPerPage = 6;
		const productList = document.querySelectorAll('.product-card');
		const totalProducts = productList.length;
		let currentPage = 1;


		function displayPage(page) {
			const start = (page - 1) * productsPerPage;
			const end = start + productsPerPage;

			productList.forEach((product, index) => {
				product.style.display = 'none';
			});

			for (let i = start; i < end && i < totalProducts; i++) {
				productList[i].style.display = 'block';
			}
			document.getElementById('page-info').innerText = `Page ${currentPage}`;
			document.getElementById('prev').disabled = currentPage === 1;
			document.getElementById('next').disabled = end >= totalProducts;
		}

		document.getElementById('prev').addEventListener('click', function () {
			if (currentPage > 1) {
				currentPage--;
				displayPage(currentPage);
			}
		});

		document.getElementById('next').addEventListener('click', function () {
			if ((currentPage * productsPerPage) < totalProducts) {
				currentPage++;
				displayPage(currentPage);
			}
		});

		displayPage(currentPage);
	});

	document.querySelectorAll('.blue-button').forEach(button => {
		button.addEventListener('click', function (event) {
			event.preventDefault();
		});
	});

</script>



